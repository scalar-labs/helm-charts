prometheus:
  enabled: true

  commonMetaLabels:
    app.kubernetes.io/app: "scalardl-auditor-monitoring"

  server:
    releaseNamespace: true
    affinity: {}
    service:
      enabled: true
      type: "ClusterIP"
      servicePort: 9090
    containerSecurityContext:
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false

  configmapReload:
    prometheus:
      containerSecurityContext:
        capabilities:
          drop:
            - ALL
        allowPrivilegeEscalation: false

  serverFiles:
    prometheus.yml:
      scrape_configs:
      - job_name: scalardl-auditor-metrics
        honor_timestamps: true
        track_timestamps_staleness: false
        scrape_interval: 10s
        scrape_timeout: 10s
        scrape_protocols:
        - OpenMetricsText1.0.0
        - OpenMetricsText0.0.1
        - PrometheusText1.0.0
        - PrometheusText0.0.4
        metrics_path: /stats/prometheus
        scheme: http
        enable_compression: true
        follow_redirects: true
        enable_http2: true
        relabel_configs:
        - source_labels: [job]
          separator: ;
          target_label: __tmp_prometheus_job_name
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_app, __meta_kubernetes_service_labelpresent_app_kubernetes_io_app]
          separator: ;
          regex: (auditor);true
          replacement: $1
          action: keep
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          separator: ;
          regex: scalardl-audit-prometheus
          replacement: $1
          action: keep
        - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
          separator: ;
          regex: Node;(.*)
          target_label: node
          replacement: ${1}
          action: replace
        - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
          separator: ;
          regex: Pod;(.*)
          target_label: pod
          replacement: ${1}
          action: replace
        - source_labels: [__meta_kubernetes_namespace]
          separator: ;
          target_label: namespace
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_service_name]
          separator: ;
          target_label: service
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_name]
          separator: ;
          target_label: pod
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_container_name]
          separator: ;
          target_label: container
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_phase]
          separator: ;
          regex: (Failed|Succeeded)
          replacement: $1
          action: drop
        - source_labels: [__meta_kubernetes_service_name]
          separator: ;
          target_label: job
          replacement: ${1}
          action: replace
        - separator: ;
          target_label: endpoint
          replacement: scalardl-audit-prometheus
          action: replace
        - source_labels: [__address__, __tmp_hash]
          separator: ;
          regex: (.+);
          target_label: __tmp_hash
          replacement: $1
          action: replace
        - source_labels: [__tmp_hash]
          separator: ;
          modulus: 1
          target_label: __tmp_hash
          replacement: $1
          action: hashmod
        - source_labels: [__tmp_hash]
          separator: ;
          regex: "0"
          replacement: $1
          action: keep
        kubernetes_sd_configs:
        - role: endpoints
          kubeconfig_file: ""
          follow_redirects: true
          enable_http2: true
          namespaces:
            own_namespace: true
      - job_name: scalardl-auditor-envoy-metrics
        honor_timestamps: true
        track_timestamps_staleness: false
        scrape_interval: 10s
        scrape_timeout: 10s
        scrape_protocols:
        - OpenMetricsText1.0.0
        - OpenMetricsText0.0.1
        - PrometheusText1.0.0
        - PrometheusText0.0.4
        metrics_path: /stats/prometheus
        scheme: http
        enable_compression: true
        follow_redirects: true
        enable_http2: true
        relabel_configs:
        - source_labels: [job]
          separator: ;
          target_label: __tmp_prometheus_job_name
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_app, __meta_kubernetes_service_labelpresent_app_kubernetes_io_app]
          separator: ;
          regex: (envoy);true
          replacement: $1
          action: keep
        - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]
          separator: ;
          regex: (scalardl-audit);true
          replacement: $1
          action: keep
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          separator: ;
          regex: admin
          replacement: $1
          action: keep
        - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
          separator: ;
          regex: Node;(.*)
          target_label: node
          replacement: ${1}
          action: replace
        - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
          separator: ;
          regex: Pod;(.*)
          target_label: pod
          replacement: ${1}
          action: replace
        - source_labels: [__meta_kubernetes_namespace]
          separator: ;
          target_label: namespace
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_service_name]
          separator: ;
          target_label: service
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_name]
          separator: ;
          target_label: pod
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_container_name]
          separator: ;
          target_label: container
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_phase]
          separator: ;
          regex: (Failed|Succeeded)
          replacement: $1
          action: drop
        - source_labels: [__meta_kubernetes_service_name]
          separator: ;
          target_label: job
          replacement: ${1}
          action: replace
        - separator: ;
          target_label: endpoint
          replacement: admin
          action: replace
        - source_labels: [__address__, __tmp_hash]
          separator: ;
          regex: (.+);
          target_label: __tmp_hash
          replacement: $1
          action: replace
        - source_labels: [__tmp_hash]
          separator: ;
          modulus: 1
          target_label: __tmp_hash
          replacement: $1
          action: hashmod
        - source_labels: [__tmp_hash]
          separator: ;
          regex: "0"
          replacement: $1
          action: keep
        kubernetes_sd_configs:
        - role: endpoints
          kubeconfig_file: ""
          follow_redirects: true
          enable_http2: true
          namespaces:
            own_namespace: true
      - job_name: kubernetes-nodes-cadvisor
        honor_timestamps: true
        track_timestamps_staleness: false
        scrape_interval: 10s
        scrape_timeout: 10s
        scrape_protocols:
        - OpenMetricsText1.0.0
        - OpenMetricsText0.0.1
        - PrometheusText1.0.0
        - PrometheusText0.0.4
        metrics_path: /metrics
        scheme: https
        enable_compression: true
        authorization:
          type: Bearer
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: false
        follow_redirects: true
        enable_http2: true
        relabel_configs:
        - separator: ;
          regex: __meta_kubernetes_node_label_(.+)
          replacement: $1
          action: labelmap
        - separator: ;
          target_label: __address__
          replacement: kubernetes.default.svc:443
          action: replace
        - source_labels: [__meta_kubernetes_node_name]
          separator: ;
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
          action: replace
        kubernetes_sd_configs:
        - role: node
          kubeconfig_file: ""
          follow_redirects: true
          enable_http2: true
          namespaces:
            own_namespace: true
      - job_name: kube-state-metrics
        honor_labels: true
        honor_timestamps: true
        track_timestamps_staleness: false
        scrape_interval: 10s
        scrape_timeout: 10s
        scrape_protocols:
        - OpenMetricsText1.0.0
        - OpenMetricsText0.0.1
        - PrometheusText1.0.0
        - PrometheusText0.0.4
        metrics_path: /metrics
        scheme: http
        enable_compression: true
        follow_redirects: true
        enable_http2: true
        relabel_configs:
        - source_labels: [job]
          separator: ;
          target_label: __tmp_prometheus_job_name
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_app, __meta_kubernetes_service_labelpresent_app_kubernetes_io_app]
          separator: ;
          regex: (scalardl-auditor-monitoring);true
          replacement: $1
          action: keep
        - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name, __meta_kubernetes_service_labelpresent_app_kubernetes_io_name]
          separator: ;
          regex: (kube-state-metrics);true
          replacement: $1
          action: keep
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          separator: ;
          regex: http
          replacement: $1
          action: keep
        - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
          separator: ;
          regex: Node;(.*)
          target_label: node
          replacement: ${1}
          action: replace
        - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]
          separator: ;
          regex: Pod;(.*)
          target_label: pod
          replacement: ${1}
          action: replace
        - source_labels: [__meta_kubernetes_namespace]
          separator: ;
          target_label: namespace
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_service_name]
          separator: ;
          target_label: service
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_name]
          separator: ;
          target_label: pod
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_container_name]
          separator: ;
          target_label: container
          replacement: $1
          action: replace
        - source_labels: [__meta_kubernetes_pod_phase]
          separator: ;
          regex: (Failed|Succeeded)
          replacement: $1
          action: drop
        - source_labels: [__meta_kubernetes_service_name]
          separator: ;
          target_label: job
          replacement: ${1}
          action: replace
        - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
          separator: ;
          regex: (.+)
          target_label: job
          replacement: ${1}
          action: replace
        - separator: ;
          target_label: endpoint
          replacement: http
          action: replace
        - source_labels: [__address__, __tmp_hash]
          separator: ;
          regex: (.+);
          target_label: __tmp_hash
          replacement: $1
          action: replace
        - source_labels: [__tmp_hash]
          separator: ;
          modulus: 1
          target_label: __tmp_hash
          replacement: $1
          action: hashmod
        - source_labels: [__tmp_hash]
          separator: ;
          regex: "0"
          replacement: $1
          action: keep
        kubernetes_sd_configs:
        - role: endpoints
          kubeconfig_file: ""
          follow_redirects: true
          enable_http2: true
          namespaces:
            own_namespace: true

  alertmanager:
    enabled: false
  kube-state-metrics:
    enabled: true
    customLabels:
      app.kubernetes.io/app: "scalardl-auditor-monitoring"
    releaseNamespace: true
    rbac:
      useClusterRole: false
  prometheus-node-exporter:
    enabled: false
  prometheus-pushgateway:
    enabled: false

grafana:
  enabled: true

  extraLabels:
    app.kubernetes.io/app: "scalardl-auditor-monitoring"

  service:
    type: ClusterIP
    port: 3000

  sidecar:
    datasources:
      enabled: true
      label: grafana_datasource
      labelValue: "1"
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          uid: prometheus
          url: http://{{ .Release.Name }}-prometheus-server:9090/
          access: proxy
          editable: false
          isDefault: false
          jsonData:
            timeInterval: 30s
        - name: Loki
          type: loki
          uid: loki
          url: http://{{ .Release.Name }}-loki:3100/
          access: proxy
          editable: false
          isDefault: false

  testFramework:
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      runAsNonRoot: true
    containerSecurityContext:
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false

loki:
  enabled: true

  loki:
    podLabels:
      app.kubernetes.io/app: "scalardl-auditor-monitoring"
    auth_enabled: false
    extraMemberlistConfig:
      bind_addr:
        - ${MY_POD_IP}
    commonConfig:
      replication_factor: 1
    schemaConfig:
      configs:
        - from: "2024-04-01"
          store: tsdb
          object_store: s3
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
    pattern_ingester:
      enabled: true
    limits_config:
      retention_period: 720h
      discover_service_name: []
    compactor:
      retention_enabled: true
      delete_request_store: s3

  deploymentMode: SingleBinary

  singleBinary:
    replicas: 1
    extraArgs:
      - -config.expand-env=true
    extraEnv:
      - name: MY_POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP

  minio:
    enabled: true
    additionalLabels:
      app.kubernetes.io/app: "scalardl-auditor-monitoring"
    podLabels:
      app.kubernetes.io/app: "scalardl-auditor-monitoring"
    containerSecurityContext:
      readOnlyRootFilesystem: false
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
    postJob:
      securityContext:
        enabled: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
    makeBucketJob:
      securityContext:
        enabled: true
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        capabilities:
          drop:
            - ALL
        allowPrivilegeEscalation: false
    makeUserJob:
      securityContext:
        enabled: true
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        capabilities:
          drop:
            - ALL
        allowPrivilegeEscalation: false

  test:
    enabled: false
  lokiCanary:
    enabled: false
  gateway:
    enabled: false
  resultsCache:
    enabled: false
  chunksCache:
    enabled: false

  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0
  ingester:
    replicas: 0
  querier:
    replicas: 0
  queryFrontend:
    replicas: 0
  queryScheduler:
    replicas: 0
  distributor:
    replicas: 0
  compactor:
    replicas: 0
  indexGateway:
    replicas: 0
  bloomCompactor:
    replicas: 0
  bloomGateway:
    replicas: 0

alloy:
  enabled: true

  global:
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault

  controller:
    podLabels:
      app.kubernetes.io/app: "scalardl-auditor-monitoring"
      container.kubeaudit.io/alloy.allow-run-as-root: ""
    type: "deployment"
    replicas: 1

  configReloader:
    securityContext:
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
      runAsNonRoot: true

  alloy:
    securityContext:
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
    configMap:
      content: |
        discovery.kubernetes "scalardl_auditor" {
          role = "pod"
          namespaces {
            names = ["{{ .Release.Namespace }}"]
          }
          selectors {
            role = "pod"
            label = "app.kubernetes.io/app=auditor"
          }
        }

        discovery.kubernetes "envoy" {
          role = "pod"
          namespaces {
            names = ["{{ .Release.Namespace }}"]
          }
          selectors {
            role = "pod"
            label = "app.kubernetes.io/app=envoy"
          }
        }

        discovery.kubernetes "scalar_admin_for_kubernetes" {
          role = "pod"
          namespaces {
            names = ["{{ .Release.Namespace }}"]
          }
          selectors {
            role = "pod"
            label = "app.kubernetes.io/app=scalar-admin-for-kubernetes"
          }
        }

        discovery.relabel "replace_label_to_pod_scalardl_auditor" {
          targets = discovery.kubernetes.scalardl_auditor.targets
          rule {
            source_labels = ["__meta_kubernetes_pod_name"]
            action        = "replace"
            target_label  = "pod"
          }
        }

        discovery.relabel "replace_label_to_pod_envoy" {
          targets = discovery.kubernetes.envoy.targets
          rule {
            source_labels = ["__meta_kubernetes_pod_name"]
            action        = "replace"
            target_label  = "pod"
          }
        }

        discovery.relabel "replace_label_to_pod_scalar_admin_for_kubernetes" {
          targets = discovery.kubernetes.scalar_admin_for_kubernetes.targets
          rule {
            source_labels = ["__meta_kubernetes_pod_name"]
            action        = "replace"
            target_label  = "pod"
          }
        }

        loki.source.kubernetes "scalardl_auditor" {
          targets    = discovery.relabel.replace_label_to_pod_scalardl_auditor.output
          forward_to = [loki.relabel.remove_unnecessary_labels.receiver]
        }

        loki.source.kubernetes "envoy" {
          targets    = discovery.relabel.replace_label_to_pod_envoy.output
          forward_to = [loki.relabel.remove_unnecessary_labels.receiver]
        }

        loki.source.kubernetes "scalar_admin_for_kubernetes" {
          targets    = discovery.relabel.replace_label_to_pod_scalar_admin_for_kubernetes.output
          forward_to = [loki.relabel.remove_unnecessary_labels.receiver]
        }

        loki.relabel "remove_unnecessary_labels" {
          forward_to = [loki.write.loki.receiver]
          rule {
            action   = "labelkeep"
            regex    = "pod"
          }
        }

        loki.write "loki" {
          endpoint {
            url = "http://{{ .Release.Name }}-loki:3100/loki/api/v1/push"
          }
        }
