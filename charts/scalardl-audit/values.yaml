# Default values for scalardl-audit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- String to partially override scalardl-audit.fullname template (will maintain the release name)
nameOverride: ""

# -- String to fully override scalardl-audit.fullname template
fullnameOverride: ""

envoy:
  # -- enable envoy
  enabled: true
  # -- String to partially override envoy.fullname template
  nameOverride: scalardl-audit

  envoyConfiguration:
    # -- list of service name and port
    serviceListeners: scalardl-audit-service:50051,scalardl-audit-privileged:50052

  image:
    # -- Docker tag
    version: 1.2.0

  service:
    # -- service types in kubernetes
    type: ClusterIP
    # -- Service annotations, e.g: prometheus, etc.
    annotations: {}
    ports:
      envoy:
        # -- envoy public port
        port: 40051
        # -- envoy k8s internal name
        targetPort: 50051
        # -- envoy protocol
        protocol: TCP
      envoy-priv:
        # -- envoy public port
        port: 40052
        # -- envoy k8s internal name
        targetPort: 50052
        # -- envoy protocol
        protocol: TCP

auditor:
  # -- number of replicas to deploy
  replicaCount: 3

  scalarAuditorConfiguration:
    # -- The contact points of the database such as hostnames or URLs
    dbContactPoints: cassandra
    # -- The port number of the contact points
    dbContactPort: 9042
    # -- The username of the database
    dbUsername: cassandra
    # -- The password of the database
    dbPassword: cassandra
    # -- The storage of the database: cassandra or cosmos
    dbStorage: cassandra
    # -- The port number of Auditor Server
    auditorServerPort: 50051
    # -- The port number of Auditor Privileged Server
    auditorServerPrivilegedPort: 50052
    # -- The port number of Auditor Admin Server
    auditorServerAdminPort: 50053
    # -- The log level of Scalar auditor
    auditorLogLevel: INFO
    # -- The host name of Ledger. The service endpoint of Ledger-side envoy should be specified
    auditorLedgerHost: ""
    # -- The holder ID of an Auditor certificate
    auditorCertHolderId: auditor
    # -- The version of an Auditor certificate
    auditorCertVersion: 1
    # -- The name of an Auditor secret
    secretName: auditor-keys
    # -- The secret key of an Auditor certificate
    auditorCertSecretKey: certificate
    # -- The secret key of an Auditor private key
    auditorPrivateKeySecretKey: private-key

  image:
    # -- Docker image
    repository: ghcr.io/scalar-labs/scalar-auditor
    # -- Docker tag
    version: 3.3.1
    # -- Specify a imagePullPolicy
    pullPolicy: IfNotPresent

  # -- Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  imagePullSecrets: [name: reg-docker-secrets]

  strategy:
    rollingUpdate:
      # -- The number of pods that can be created above the desired amount of pods during an update
      maxSurge: 25%
      # -- The number of pods that can be unavailable during the update process
      maxUnavailable: 25%
    # -- New pods are added gradually, and old pods are terminated gradually, e.g: Recreate or RollingUpdate
    type: RollingUpdate

  # -- PodSecurityContext holds pod-level security attributes and common container settings
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault

  # -- Setting security context at the pod applies those settings to all containers in the pod
  securityContext:
    capabilities:
      drop:
      - ALL
    runAsNonRoot: true
    allowPrivilegeEscalation: false

  service:
    # -- service types in kubernetes
    type: ClusterIP
    # -- Service annotations
    annotations: {}
    ports:
      scalardl-auditor:
        # -- scalardl target port
        port: 50051
        # -- scalardl k8s internal name
        targetPort: 50051
        # -- scalardl protocol
        protocol: TCP
      scalardl-auditor-priv:
        # -- scalardl-priv target port
        port: 50052
        # -- scalardl-priv k8s internal name
        targetPort: 50052
        # -- scalardl-priv protocol
        protocol: TCP
      scalardl-auditor-admin:
        # -- scalardl-admin target port
        port: 50053
        # -- scalardl-admin k8s internal name
        targetPort: 50053
        # -- scalardl-admin protocol
        protocol: TCP

  prometheusRule:
    # -- enable rules for prometheus
    enabled: false
    # -- which namespace prometheus is located. by default monitoring
    namespace: monitoring

  grafanaDashboard:
    # -- enable grafana dashboard
    enabled: false
    # -- which namespace grafana dashboard is located. by default monitoring
    namespace: monitoring

  serviceMonitor:
    # -- enable metrics collect with prometheus
    enabled: false
    # -- custom interval to retrieve the metrics
    interval: "15s"
    # -- which namespace prometheus is located. by default monitoring
    namespace: monitoring

  # -- resources allowed to the pod
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- nodeSelector is form of node selection constraint
  nodeSelector: {}

  # -- Tolerations are applied to pods, and allow (but do not require) the pods to schedule onto nodes with matching taints.
  tolerations: []

  # -- the affinity/anti-affinity feature, greatly expands the types of constraints you can express
  affinity: {}

  # -- Name of existing secret to use for storing database username and password
  existingSecret: ""
