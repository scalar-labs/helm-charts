apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "envoy.fullname" . }}-envoy
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "envoy.labels" . | nindent 4 }}
spec:
  minReadySeconds: 0
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "envoy.selectorLabels" . | nindent 6 }}
  {{- with .Values.strategy }}
  strategy:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
    {{- if .Values.podAnnotations }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
    {{- end }}
      labels:
        {{- include "envoy.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.rbac.create }}
      serviceAccountName: {{ include "envoy.fullname" . }}-envoy
      {{- end }}
      restartPolicy: Always
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 60
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: 50051
          - containerPort: 50052
          - containerPort: 9001
          env:
          - name: admin_access_log_path
            value: "{{ .Values.envoyConfiguration.adminAccessLogPath }}"
          - name: scalardl_address
            value: {{ include "envoy.fullname" . }}-headless
          - name: service_listeners
            value: "{{ .Values.envoyConfiguration.serviceListeners }}"
          - name: envoy_downstream_tls
            value: "{{ .Values.tls.downstream.enabled }}"
          - name: envoy_upstream_tls
            value: "{{ .Values.tls.upstream.enabled }}"
          {{- if .Values.tls.upstream.overrideAuthority }}
          - name: envoy_upstream_tls_override_authority
            value: "{{ .Values.tls.upstream.overrideAuthority }}"
          {{- end }}
          startupProbe:
            httpGet:
              path: /ready
              port: 9001
            failureThreshold: 60
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /ready
              port: 9001
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "curl -sX POST 127.0.0.1:9001/healthcheck/fail; sleep 30"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.tls.upstream.enabled }}
            - name: scalar-envoy-tls-upstream-volume
              mountPath: /etc/envoy/upstream/tls
            {{- end }}
            {{- if .Values.tls.downstream.enabled }}
            - name: scalar-envoy-tls-downstream-volume
              mountPath: /etc/envoy/downstream/tls
            {{- end }}
      volumes:
        {{- if .Values.tls.upstream.enabled }}
        - name: scalar-envoy-tls-upstream-volume
          secret:
            {{- if .Values.tls.upstream.caRootCertSecret }}
            secretName: {{ .Values.tls.upstream.caRootCertSecret }}
            {{- else }}
            secretName: {{ include "envoy.fullname" . }}-envoy-tls-cert
            {{- end }}
        {{- end }}
        {{- if and .Values.tls.downstream.enabled .Values.tls.downstream.certManager.enabled }}
        - name: scalar-envoy-tls-downstream-volume
          secret:
            secretName: {{ include "envoy.fullname" . }}-envoy-tls-cert
        {{- end }}
        {{- if and (.Values.tls.downstream.enabled) (not .Values.tls.downstream.certManager.enabled) }}
        - name: scalar-envoy-tls-downstream-volume
          projected:
            sources:
              - secret:
                  name: {{ .Values.tls.downstream.certChainSecret }}
              - secret:
                  name: {{ .Values.tls.downstream.privateKeySecret }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
