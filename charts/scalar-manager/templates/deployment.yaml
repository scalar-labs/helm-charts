apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "scalar-manager.fullname" . }}
  labels:
    {{- include "scalar-manager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "scalar-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "scalar-manager.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "scalar-manager.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountServiceAccountToken }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.scalarManager.port }}
          env:
            - name: PORT
              value: "{{ .Values.scalarManager.port }}"
            {{- range $i, $target := .Values.scalarManager.targets }}
            - name: TARGET_NAME_{{ $i }}
              value: {{ $target.name | default $i }}
            - name: TARGET_ADMIN_SRV_{{ $i }}
              value: {{ $target.adminSrv | default $i }}
            - name: TARGET_DATABASE_TYPE_{{ $i }}
              value: {{ $target.databaseType| default $i }}
            {{ end }}
            - name: GRAFANA_URL
              value: {{ .Values.scalarManager.grafanaUrl | default "" }}
            - name: REFRESH_INTERVAL
              value: "{{ .Values.scalarManager.refreshInterval }}"
          startupProbe:
            httpGet:
              path: /health
              port: {{ .Values.scalarManager.port }}
            failureThreshold: 60
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.scalarManager.port }}
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.scalarManager.port }}
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
