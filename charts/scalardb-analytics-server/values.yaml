# -- String to partially override scalardb-analytics-server.fullname template (will maintain the release name)
nameOverride: ""
# -- String to fully override scalardb-analytics-server.fullname template
fullnameOverride: ""

scalarDbAnalyticsServer:

  # -- You can specify your server.properties.
  properties: |

  # -- Secret name that includes sensitive data such as credentials. Each secret key is passed to Pod as environment variables using envFrom.
  secretName: ""

  image:
    # -- Docker image repository of ScalarDB Analytics Server.
    repository: "ghcr.io/scalar-labs/scalardb-analytics-server-byol"
    # -- Specify a image pulling policy.
    pullPolicy: "IfNotPresent"
    # -- Override the image tag whose default is the chart appVersion
    tag: ""

  # -- Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  imagePullSecrets: []

  strategy:
    rollingUpdate:
      # -- The number of pods that can be created above the desired amount of pods during an update
      maxSurge: 25%
      # -- The number of pods that can be unavailable during the update process
      maxUnavailable: 25%
    # -- New pods are added gradually, and old pods are terminated gradually, e.g: Recreate or RollingUpdate
    type: RollingUpdate

  service:
    # -- service types in kubernetes.
    type: ClusterIP
    # -- Annotations for service resource.
    annotations: {}
    ports:
      scalardb-analytics-server-catalog:
        # -- ScalarDB Analytics Server catalog port.
        port: 11051
        # -- ScalarDB Analytics Server catalog target port.
        targetPort: 11051
        # -- ScalarDB Analytics Server catalog protocol.
        protocol: TCP
      scalardb-analytics-server-metering:
        # -- ScalarDB Analytics Server metering port.
        port: 11052
        # -- ScalarDB Analytics Server metering target port.
        targetPort: 11052
        # -- ScalarDB Analytics Server metering protocol.
        protocol: TCP

  # -- PodSecurityContext holds pod-level security attributes and common container settings.
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault

  # -- Setting security context at the pod applies those settings to all containers in the pod.
  securityContext:
    # -- Capabilities (specifically, Linux capabilities), are used for permission management in Linux. Some capabilities are enabled by default
    capabilities:
      drop:
        - ALL
    # -- Containers should be run as a non-root user with the minimum required permissions (principle of least privilege)
    runAsNonRoot: true
    # -- AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process
    allowPrivilegeEscalation: false

  # -- Pod annotations for the scalardb-analytics-server deployment
  podAnnotations: {}

  # -- Resources allowed to the pod.
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # -- nodeSelector is form of node selection constraint.
  nodeSelector: {}

  # -- Tolerations are applied to pods, and allow (but do not require) the pods to schedule onto nodes with matching taints.
  tolerations: []

  # -- The affinity/anti-affinity feature, greatly expands the types of constraints you can express.
  affinity: {}

  # -- Defines additional volumes.
  # If you want to get a heap dump of the ScalarDB Analytics Server, you need to mount a volume to make the dump file persistent.
  extraVolumes: []
  # - name: heap-dump
  #   emptyDir: {}

  # -- Defines additional volume mounts.
  # If you want to get a heap dump of the ScalarDB Analytics Server, you need to mount a volume to make the dump file persistent.
  extraVolumeMounts: []
  # - name: heap-dump
  #   mountPath: /dump

  serviceAccount:
    # -- Name of the existing service account resource
    serviceAccountName: ""
    # -- Specify to mount a service account token or not
    automountServiceAccountToken: true

  tls:
    # -- Enable TLS. You need to enable TLS when you use wire encryption feature of ScalarDB Analytics Server.
    enabled: false
    # -- The custom authority for TLS communication. This doesn't change what host is actually connected. This is intended for testing, but may safely be used outside of tests as an alternative to DNS overrides. For example, you can specify the hostname presented in the certificate chain file that you set by using `scalarDbAnalyticsServer.tls.certChainSecret`. This chart uses this value for startupProbe and livenessProbe.
    overrideAuthority: ""
    # -- Name of the Secret containing the custom CA root certificate for TLS communication.
    caRootCertSecret: ""
    # -- Name of the Secret containing the certificate chain file used for TLS communication.
    certChainSecret: ""
    # -- Name of the Secret containing the private key file used for TLS communication.
    privateKeySecret: ""
    certManager:
      # -- Use cert-manager to manage private key and certificate files.
      enabled: false
      # -- Configuration of a certificate for self-signed CA.
      selfSigned:
        # -- Use self-signed CA.
        enabled: false
        caRootCert:
          # -- Duration of a self-signed CA certificate.
          duration: "8760h0m0s"
          # -- How long before expiry a self-signed CA certificate should be renewed.
          renewBefore: "360h0m0s"
      # -- Duration of a certificate.
      duration: "8760h0m0s"
      # -- How long before expiry a certificate should be renewed.
      renewBefore: "360h0m0s"
      # -- Configuration of a private key.
      privateKey:
        algorithm: ECDSA
        encoding: PKCS8
        size: 256
      # -- List of key usages.
      usages:
        - server auth
        - key encipherment
        - signing
      # -- Subject Alternative Name (SAN) of a certificate.
      dnsNames:
        - localhost
      # -- Issuer references of cert-manager.
      issuerRef: {}
