name: CI for the ScalarDL Ledger Monitoring chart

on:
  pull_request:
    branches:
      - main
    paths:
      - "charts/scalardl-ledger-monitoring/**"
  push:
    branches:
      - main
    paths:
      - "charts/scalardl-ledger-monitoring/**"
  workflow_dispatch:

jobs:
  lint-chart:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: 3.13

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Add Helm repos
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2

      - name: Run chart-testing (updated chart)
        run: ct lint --charts ./charts/scalardl-ledger-monitoring/ --config .github/ct.yaml

  kubeaudit-chart:
    runs-on: ubuntu-latest
    env:
      KUBE_AUDIT_VERSION: 0.22.2

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Set up kubeaudit
        uses: supplypike/setup-bin@v4
        with:
          uri: "https://github.com/Shopify/kubeaudit/releases/download/v${{ env.KUBE_AUDIT_VERSION }}/kubeaudit_${{ env.KUBE_AUDIT_VERSION }}_linux_amd64.tar.gz"
          name: "kubeaudit"
          version: ${{ env.KUBE_AUDIT_VERSION }}

      - name: Add Helm repos
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts

      - name: Run kubeaudit
        run: |
          helm dependency build charts/scalardl-ledger-monitoring/
          kubeaudit all -k .github/kube-audit.yaml -f <(helm template --generate-name "charts/scalardl-ledger-monitoring/") -m error

  kubeval-chart:
    runs-on: ubuntu-latest
    needs: lint-chart
    strategy:
      matrix:
        k8s:
          - v1.30.13
          - v1.31.12
          - v1.32.8
          - v1.33.4

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Install helm-kubeval plugin
        run: helm plugin install https://github.com/instrumenta/helm-kubeval

      - name: Add Helm repos
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts

      - name: Run kubeval
        env:
          KUBERNETES_VERSION: ${{ matrix.k8s }}
          KUBEVAL_SCHEMA_LOCATION: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master
        run: |
          helm dependency build charts/scalardl-ledger-monitoring/
          helm kubeval charts/scalardl-ledger-monitoring/ -v "${KUBERNETES_VERSION#v}"

  install-chart:
    name: install-chart
    runs-on: ubuntu-latest
    needs:
      - lint-chart
      - kubeval-chart
      - kubeaudit-chart
    env:
      DOCKER_REGISTRY_PASSWORD: ${{ secrets.CR_PAT }}
      DOCKER_REGISTRY_USERNAME: scalar-git
      DOCKER_REGISTRY_SERVER: ghcr.io
    strategy:
      matrix:
        k8s:
          - v1.30.13
          - v1.31.12
          - v1.32.8
          - v1.33.4

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2

      - name: Create kind ${{ matrix.k8s }} cluster
        uses: helm/kind-action@v1
        with:
          config: .github/kind-cluster.yaml
          node_image: kindest/node:${{ matrix.k8s }}
          kubectl_version: ${{ matrix.k8s }}

      - name: Setup kubernetes (Kind) if need
        run: |
          kubectl cluster-info

      - name: Add Helm repos
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts

      - name: Run helm install
        run: |
          # `helm install --wait` (`--wait` option) and `Chart Hooks` (`post-install` hook) create the deadlock situation as follows:
          # 
          # - `--wait` option waits until all pods' statuses are ready.
          # - `post-install` hook runs (deploy jobs) after all pods' statuses are ready.
          # - However, the Loki pod status won't be ready until the `post-install` hook deploys the job (the job creates necessary buckets in MinIO as a log storage for Loki).
          # 
          # To avoid this deadlock, we remove the `post-install` hook in the CI. If we remove the `post-install` hook, the job is deployed at the same time as Loki and MinIO without waiting for the pods' statues to be ready.
          helm dependency build charts/scalardl-ledger-monitoring/
          LOKI_VERSION=$(basename $(ls ./charts/scalardl-ledger-monitoring/charts/loki-*) .tgz | sed 's/loki-//')
          tar xzf ./charts/scalardl-ledger-monitoring/charts/loki-${LOKI_VERSION}.tgz
          sed -i '/helm.sh\/hook/d' ./loki/charts/minio/templates/*
          helm package ./loki/ -d ./charts/scalardl-ledger-monitoring/charts/
          helm install scalardl-ledger-monitoring charts/scalardl-ledger-monitoring/ --namespace default --wait --timeout 300s --wait-for-jobs

  verify-chart-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify chart docs
        run: ./scripts/verify-chart-docs.sh

  verify-values-schema-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify values schema json
        run: ./scripts/verify-values-schema-json.sh
