name: Chart Testing and Kubeval

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - "charts/**"

env:
  HELM_VERSION: v3.5.2

jobs:
  lint-chart:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: 3.7

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Add Helm repos
        run: |
          helm repo add scalar https://scalar-labs.github.io/helm-charts

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1

      - name: Run chart-testing (lint)
        run: ct lint --config .github/ct.yaml

  kubeaudit-chart:
    runs-on: ubuntu-latest
    env:
      KUBE_AUDIT_VERSION: 0.16.0

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Set up kubeaudit
        uses: supplypike/setup-bin@v1
        with:
          uri: "https://github.com/Shopify/kubeaudit/releases/download/${{ env.KUBE_AUDIT_VERSION }}/kubeaudit_${{ env.KUBE_AUDIT_VERSION }}_linux_amd64.tar.gz"
          name: "kubeaudit"
          version: ${{ env.KUBE_AUDIT_VERSION }}

      - name: Add Helm repos
        run: |
          helm repo add scalar https://scalar-labs.github.io/helm-charts

      - name: Run kubeaudit
        run: |
          # TODO If more charts are supported by kubeaudit, they should be added.
          # Change to `ls charts` when all charts are supported.
          chart_dirs=(envoy)
          for chart_dir in ${chart_dirs[@]}; do
            echo "kubeaudit charts/${chart_dir} chart..."
            kubeaudit all -k .github/kube-audit.yaml -f <(helm template --generate-name "charts/${chart_dir}") -m error
          done

  kubeval-chart:
    runs-on: ubuntu-latest
    needs: lint-chart
    strategy:
      matrix:
        k8s:
          - v1.18.19
          - v1.19.11
          - v1.20.7
          - v1.21.2

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Add Helm repos
        run: |
          helm repo add scalar https://scalar-labs.github.io/helm-charts

      - name: Install helm-kubeval plugin
        run: helm plugin install https://github.com/instrumenta/helm-kubeval

      - name: Run kubeval
        run: |
          chart_dirs=$(ls charts)
          for chart_dir in ${chart_dirs}; do
            echo "helm dependency build charts/${chart_dir} chart..."
            helm dependency build charts/${chart_dir}
            echo "kubeval(idating) charts/${chart_dir} chart..."
            helm kubeval "charts/${chart_dir}" -v "${KUBERNETES_VERSION#v}"
          done
        env:
          KUBERNETES_VERSION: ${{ matrix.k8s }}
          KUBEVAL_SCHEMA_LOCATION: https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master

  install-chart:
    name: install-chart
    runs-on: ubuntu-latest
    needs:
      - lint-chart
      - kubeval-chart
      - kubeaudit-chart
    env:
      DOCKER_REGISTRY_PASSWORD: ${{ secrets.CR_PAT }}
      DOCKER_REGISTRY_USERNAME: scalar-git
      DOCKER_REGISTRY_SERVER: ghcr.io
    strategy:
      matrix:
        k8s:
          - v1.18.19
          - v1.19.11
          - v1.20.7
          - v1.21.2

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1

      - name: Add Helm repos
        run: |
          helm repo add scalar https://scalar-labs.github.io/helm-charts

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config .github/ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Create kind ${{ matrix.k8s }} cluster
        uses: helm/kind-action@v1.2.0
        with:
          config: .github/kind-cluster.yaml
          node_image: kindest/node:${{ matrix.k8s }}
        if: steps.list-changed.outputs.changed == 'true'

      - name: Setup kubernetes (Kind) with registry, cassandra and schema
        run: |
          kubectl cluster-info
          kubectl create secret docker-registry reg-docker-secrets --docker-server=${DOCKER_REGISTRY_SERVER} --docker-username=${DOCKER_REGISTRY_USERNAME} --docker-password=${DOCKER_REGISTRY_PASSWORD}
          kubectl create secret generic ledger-keys --from-file=private-key=.github/ledger-key.pem
          kubectl create secret generic auditor-keys --from-file=certificate=.github/auditor-cert.pem --from-file=private-key=.github/auditor-key.pem
          kubectl create -f .github/cassandra.yaml
          echo "Wait until cassandra is running" && sleep 100
          kubectl get pods,svc,endpoints,nodes -o wide

      - name: Run chart-testing (install)
        run: ct install --config .github/ct.yaml

  verify-chart-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Verify chart docs
        run: ./scripts/verify-chart-docs.sh

  verify-values-schema-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Verify values schema json
        run: ./scripts/verify-values-schema-json.sh
